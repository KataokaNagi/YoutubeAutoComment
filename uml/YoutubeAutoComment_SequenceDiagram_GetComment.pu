' @file      YoutubeAutoComment_SequenceDiagram_GetComment.pu
' @brief     高度情報演習2B プロジェクト計画書のシーケンス図の出力用ファイル（コメント取得パート）
' @note      java -jar plantuml.jar -graphvizdot C:\Graphviz\bin\dot.exe -charset UTF-8 .\*.pu
' @auther    AL18036 Kataoka Nagi
' @date      2020-12-17 15:34:02
' $Version   1.0
' $Revision  1.2
' @par       変更点：1min -> 2min
' @see       https://qiita.com/opengl-8080/items/98c510b8ca060bdd2ea3

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

@startuml out/SequenceDiagram_GetComment.png
scale 1.5
skinparam DefaultFontName メイリオ
' 可視性の変更
skinparam classAttributeIconSize 0

''''''''''''''''''''''''''''''''''''''''''''''''''

title
**Youtubeコメントの取得**
end title

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

actor User
participant YoutubeAutoComment.java
participant OAuthHelper.java
participant API.java
' participant Timer.java
participant TimerTask.java
participant JSONHttpRequest.java
participant Config.java
' 冗長？
' participant HashMap.java
' participant ObjectMapper.java

' participant EmoationAnalyser.java
' participant ReplyGenerator.java

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
activate YoutubeAutoComment.java

activate User
User -> User: Comment on Youtube
deactivate User

''''''''''''''''''''''''''''''''''''''''''''''''''

YoutubeAutoComment.java -> OAuthHelper.java: authorize(): Credential
activate OAuthHelper.java

''''''''''''''''''''''''''''''''''''''''''''''''''

YoutubeAutoComment.java -> API.java: userInfoMe(Credential: credential): UserInfoPlus
activate API.java

''''''''''''''''''''''''''''''''''''''''''''''''''

YoutubeAutoComment.java -> TimerTask.java: run()
' activate Timer.java
activate TimerTask.java

''''''''''''''''''''''''''''''''''''''''''''''''''

YoutubeAutoComment.java -> API.java: commentThreadList(videoId: String)\n: CommentThreadListResponse

''''''''''''''''''''''''''''''''''''''''''''''''''

API.java -> Config.java: getHttpProxyEnabled(): boolean
activate Config.java
deactivate Config.java

alt getHttpProxyEnabled() == true
  API.java -> JSONHttpRequest.java: JSONHttpRequest(proxy: Proxy, method: String, baseUrl: String)
  activate JSONHttpRequest.java
else else
  API.java -> JSONHttpRequest.java: JSONHttpRequest(method: String, baseUrl: String)
end

''''''''''''''''''''''''''''''''''''''''''''''''''

API.java -> Config.java: getApiKey(): String
activate Config.java
deactivate Config.java

' 冗長？
' API.java -> HashMap.java: put(K: Object, V: Object)
' API.java -> HashMap.java
' API.java -> HashMap.java
' API.java -> HashMap.java
' API.java -> HashMap.java

''''''''''''''''''''''''''''''''''''''''''''''''''

API.java -> JSONHttpRequest.java: setParams(params: Map<String, String>): JSONHttpRequest
API.java -> JSONHttpRequest.java: doRequest(): JSONHttpRequest
API.java -> JSONHttpRequest.java: getResponse(): String

''''''''''''''''''''''''''''''''''''''''''''''''''

YoutubeAutoComment.java -> API.java: get commentThread.snippet.topLevelComment
YoutubeAutoComment.java -> API.java: commentsList(parentId: String): CommentListResponse
YoutubeAutoComment.java -> API.java: reply.snippet.authorDisplayName.equals(userInfoName: String)

''''''''''''''''''''''''''''''''''''''''''''''''''

group opt [!replyed]
YoutubeAutoComment.java -> API.java: get comment.snippet.textOriginal
' YoutubeAutoComment.java -> ReplyGenerator.java: generate(comment: String)
end

''''''''''''''''''''''''''''''''''''''''''''''''''

' YoutubeAutoComment.java -> Timer.java: scheduleAtFixedRate(Runnable command, long initialDelay, long period)

''''''''''''''''''''''''''''''''''''''''''''''''''


@enduml
