' @file      YoutubeAutoComment_ClassDiagram.pu
' @brief     高度情報演習2B プロジェクト計画書のクラス図の出力用ファイル
' @auther    AL18046 Kurihara Jin
' @auther    AL18036 Kataoka Nagi
' @date      2021-01-16 17:40:00
' $Version   1.3
' $Revision  1.0
' @par       追加点：変更点を追加
' @see       https://qiita.com/opengl-8080/items/98c510b8ca060bdd2ea3

@startuml out/ClassDiagram.png
scale 1.5
skinparam DefaultFontName メイリオ
' 可視性の変更
skinparam classAttributeIconSize 0

' class def
' @see https://qiita.com/KeithYokoma/items/ee21fec6a3ebb5d1e9a8

package com.github.kataokanagi {
  package com.github.kataokanagi.utils {
  }
  package com.github.kataokanagi.youtubeapi {
    package com.github.kataokanagi.youtubeapi.model {
    }
  }
}

package com.google.api.client {
}

package com.github.kataokanagi.utils {
    class Log {
        - {static} ENABLE_DEBUG: boolean = true
        - {static} ENABLE_VERBOSE: boolean = true
        - {static} ANSI_RESET: String = "\u001B[0m"
        - {static} ANSI_RED = "\u001B[31m"
        - {static} ANSI_YELLOW = "\u001B[33m"

        + {static} d(tag: String, msg: String): void
        + {static} v(tag: String, msg: String): void
        + {static} e(tag: String, msg: String): void
        + {static} w(tag: String, msg: String): void
    }
}

package com.github.kataokanagi.youtubeapi.model {
    class Comment {
        + kind: String
        + etag: String
        + id: String
        + snippet: CommentSnippet

        + Comment()
    }

    class CommentSnippet {
        + videoId: String
        + parentId: String
        + textDisplay: String
        + textOriginal: String
        + authorDisplayName: String
        + authorChannelUrl: String
        + publishedAt: Date
        + updatedAt: Date
    }

    Comment +-- CommentSnippet

    class CommentThread {
        + kind: String
        + etag: String
        + id: String
        + snippet: CommentThreadSnippet
    }

    class CommentThreadSnippet {
        + videoId: String
        + topLevelComment: Comment
        + canReply: boolean
        + totalReplyCount: int
        + isPublic: boolean
    }

    CommentThread +-- CommentThreadSnippet

    class CommentThreadListResponse {
        + kind: String
        + etag: String
        + items: CommentThread[]
    }

    CommentThreadListResponse o-- CommentThread
    CommentThread o-- Comment

    class UserInfoPlus {
        + id: String
        + name: String
        + picture: String
    }
}

package com.github.kataokanagi.youtubeapi {
    class API {
        - {static} TAG: String = "API"
        - {static} GOOGLE_OAUTH_USERINFO_ME: String = "https://www.googleapis.com/userinfo/v2/me"
        - {static} YOUTUBE_V3_COMMENTTHREADS: String = "https://www.googleapis.com/youtube/v3/commentThreads"
        - {static} YOUTUBE_V3_COMMENTS: String = "https://www.googleapis.com/youtube/v3/comments"

        + {static} userInfoMe(credential: Credential): UserInfoPlus
        + {static} commentThreadList(videoId: String): CommentThreadListResponse
        + {static} commentsInsert(credential: Credential, parentId: String, commentText: String): Comment
        ' + {static} replyComment(videoId: String, comment: String): void ' 仮に追加していたもの（片岡）
    }

    class Config {
        - {static} API_KEY: String = ""
        - {static} enableHttpProxy: boolean = false
        - {static} httpProxyHost: String
        - {static} httpProxyPort: int

        + {static} getHttpProxyEnabled(): boolean
        + {static} setHttpProxyEnabled(enabled: boolean): void
        + {static} setHttpProxyServer(host: String, port: int): void
        + {static} getHttpProxyHost(): String
        + {static} getHttpProxyPort(): int
        + {static} getApiKey(): String
    }

    class JSONHttpRequest {
        - {static} TAG: String = "JSONHttpRequest"
        - proxy: Proxy
        - method: String
        - baseUrl: String
        - params: Map<String, String>
        - headers: Map<String, String>
        - payload: String
        - urlConnection: HttpURLConnection

        + JSONHttpRequest(method: String, baseUrl: String)
        + JSONHttpRequest(proxy: Proxy, method: String, baseUrl: String)
        + setParams(params: Map<String, String>): JSONHttpRequest
        + setHeaders(headers: Map<String, String>): JSONHttpRequest
        + setPayload(payload: String): JSONHttpRequest
        + doRequest(): JSONHttpRequest
        + getResponse(): String
    }

  class OAuthHelper {
    - {static} TAG: String = "OAuthHelper"
    - {static} SCOPE_YOUTUBE: String = "https://www.googleapis.com/auth/youtube.force-ssl"
    - {static} SCOPE_USERINFO_PROFILE: String = "https://www.googleapis.com/auth/userinfo.profile"
    - {static} CREDENTIALS_DERECTORY = ".oauth-credentials"
    - {static} HTTP_TRANSPORT: HttpTransport
    - {static} JSON_FACTORY: JsonFactory

    + {static} authorize(): Credential
  }
}

package com.github.kataokanagi {
    class YoutubeAutoComment {
    }

    class EmotionAnalyser {
        - {static} TAG: String = "EmotionAnalyser"
        - POLAR_DICTIONARY_PATH: final String = "pn.csv.m3.120408.trim"
        - positiveLevelMap: Map<String, Integer> = new HashMap<>()

        + EmotionAnalyser()
        + getPositiveLevel(comment: String): double
        - getCommentSurfaceList(): List<String>
        - evalFunc(positiveCnt: int, negativeCnt: int): double
    }

    class ReplyGenerator {
        - {static} TAG: String = "ReplyGenerator"
        - emotionAnalyser: EmotionAnalyser

        + ReplyGenerator()
        + generate(comment: String): String
    }
}


' API o-- Log
EmotionAnalyser x--> Log
ReplyGenerator x--> Log
JSONHttpRequest x--> Log
OAuthHelper x--> Log
API x--> Log

API o-- CommentThreadListResponse
API o-- UserInfoPlus
API o-- Config
API x--> JSONHttpRequest

YoutubeAutoComment x--> OAuthHelper
YoutubeAutoComment x--> API
YoutubeAutoComment x--> ReplyGenerator
ReplyGenerator x--> EmotionAnalyser

com.google.api.client +-- API
com.google.api.client +-- YoutubeAutoComment
com.google.api.client +-- OAuthHelper

@enduml
